// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.33.0
// source: protocol/service.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { GetAPRRequest, GetAPRResponse, GetAPRUniswapv3Request, GetAPRUniswapv3Response } from "./models/getAPR";
import { GetAPYRequest, GetAPYResponse } from "./models/getAPY";
import { GetBorrowCapRequest, GetBorrowCapResponse } from "./models/getBorrowCap";
import { GetLTVRequest, GetLTVResponse } from "./models/getLTV";
import { GetLiquidityRequest, GetLiquidityResponse } from "./models/getLiquidity";
import { GetSupplyCapRequest, GetSupplyCapResponse } from "./models/getSupplyCap";
import {
  GetSupplyLiquidityUniswapv3BalanceRequest,
  GetSupplyLiquidityUniswapv3BalanceResponse,
} from "./models/getSupplyLiquidityUniswapv3Balance";
import { GetTVLRequest, GetTVLResponse } from "./models/getTVL";
import { SuppliedBalanceRequest, SuppliedBalanceResponse } from "./models/supplyERC20";
import { BorrowedBalanceRequest, BorrowedBalanceResponse } from "./models/withdrawERC20";

export const protobufPackage = "protocol";

export const PROTOCOL_PACKAGE_NAME = "protocol";

export interface ProtocolServiceClient {
  getApr(request: GetAPRRequest): Observable<GetAPRResponse>;

  getApy(request: GetAPYRequest): Observable<GetAPYResponse>;

  getTvl(request: GetTVLRequest): Observable<GetTVLResponse>;

  getLtv(request: GetLTVRequest): Observable<GetLTVResponse>;

  getBorrowCap(request: GetBorrowCapRequest): Observable<GetBorrowCapResponse>;

  getSupplyCap(request: GetSupplyCapRequest): Observable<GetSupplyCapResponse>;

  getSuppliedBalance(request: SuppliedBalanceRequest): Observable<SuppliedBalanceResponse>;

  getBorrowedBalance(request: BorrowedBalanceRequest): Observable<BorrowedBalanceResponse>;

  getLiquidity(request: GetLiquidityRequest): Observable<GetLiquidityResponse>;

  getSupplyLiquidityUniswapv3Balance(
    request: GetSupplyLiquidityUniswapv3BalanceRequest,
  ): Observable<GetSupplyLiquidityUniswapv3BalanceResponse>;

  getAprUniswapv3(request: GetAPRUniswapv3Request): Observable<GetAPRUniswapv3Response>;
}

export interface ProtocolServiceController {
  getApr(request: GetAPRRequest): Promise<GetAPRResponse> | Observable<GetAPRResponse> | GetAPRResponse;

  getApy(request: GetAPYRequest): Promise<GetAPYResponse> | Observable<GetAPYResponse> | GetAPYResponse;

  getTvl(request: GetTVLRequest): Promise<GetTVLResponse> | Observable<GetTVLResponse> | GetTVLResponse;

  getLtv(request: GetLTVRequest): Promise<GetLTVResponse> | Observable<GetLTVResponse> | GetLTVResponse;

  getBorrowCap(
    request: GetBorrowCapRequest,
  ): Promise<GetBorrowCapResponse> | Observable<GetBorrowCapResponse> | GetBorrowCapResponse;

  getSupplyCap(
    request: GetSupplyCapRequest,
  ): Promise<GetSupplyCapResponse> | Observable<GetSupplyCapResponse> | GetSupplyCapResponse;

  getSuppliedBalance(
    request: SuppliedBalanceRequest,
  ): Promise<SuppliedBalanceResponse> | Observable<SuppliedBalanceResponse> | SuppliedBalanceResponse;

  getBorrowedBalance(
    request: BorrowedBalanceRequest,
  ): Promise<BorrowedBalanceResponse> | Observable<BorrowedBalanceResponse> | BorrowedBalanceResponse;

  getLiquidity(
    request: GetLiquidityRequest,
  ): Promise<GetLiquidityResponse> | Observable<GetLiquidityResponse> | GetLiquidityResponse;

  getSupplyLiquidityUniswapv3Balance(
    request: GetSupplyLiquidityUniswapv3BalanceRequest,
  ):
    | Promise<GetSupplyLiquidityUniswapv3BalanceResponse>
    | Observable<GetSupplyLiquidityUniswapv3BalanceResponse>
    | GetSupplyLiquidityUniswapv3BalanceResponse;

  getAprUniswapv3(
    request: GetAPRUniswapv3Request,
  ): Promise<GetAPRUniswapv3Response> | Observable<GetAPRUniswapv3Response> | GetAPRUniswapv3Response;
}

export function ProtocolServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "getApr",
      "getApy",
      "getTvl",
      "getLtv",
      "getBorrowCap",
      "getSupplyCap",
      "getSuppliedBalance",
      "getBorrowedBalance",
      "getLiquidity",
      "getSupplyLiquidityUniswapv3Balance",
      "getAprUniswapv3",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ProtocolService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ProtocolService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PROTOCOL_SERVICE_NAME = "ProtocolService";
