// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: strategy/models/permission.proto

/* eslint-disable */
import { wrappers } from "protobufjs";
import { Struct } from "../../google/protobuf/struct";
import { FeeToken } from "./strategy";

export const protobufPackage = "strategy";

export interface GetPermissionRequest {
  strategyId: string;
}

export interface PermissionAction {
  id?: string | undefined;
  protocol: string;
  chainId: string;
  fnName: string;
  actionTargetSelector: string;
  actionTarget: string;
  actionPolicies: string;
  createdAt: string;
  updatedAt: string;
}

export interface PermissionInfo {
  sessionSigner: string;
  chainId: string;
  actions: PermissionAction[];
  feeToken: FeeToken | undefined;
  verificationGas: string;
}

export interface GetPermissionResponse {
  code: number;
  msg: string;
  data: PermissionInfo | undefined;
}

export interface UpdatePermissionRequest {
  userAddress: string;
  strategyId: string;
  orchestratorAddress: string;
  sessionDetail: { [key: string]: any }[];
}

export interface UpdatePermissionResponse {
  code: number;
  msg: string;
}

export const STRATEGY_PACKAGE_NAME = "strategy";

wrappers[".google.protobuf.Struct"] = { fromObject: Struct.wrap, toObject: Struct.unwrap } as any;
